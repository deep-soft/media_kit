# 2023-06-25 18:00

name: act - build

#on: [push, pull_request]

on:
  workflow_dispatch:
    inputs:
      # if: ${{ inputs.windows }}
      windows:
        description: windows
        type: boolean
        required: true
        default: true
      # if: ${{ inputs.optional-libs-windows }}
      optional-libs-windows:
        description: optional-libs-windows
        type: boolean
        required: true
        default: true

      # if: ${{ inputs.android }}
      android:
        description: android
        type: boolean
        required: true
        default: true
      # if: ${{ inputs.optional-libs-android }}
      optional-libs-android:
        description: optional-libs-android
        type: boolean
        required: true
        default: true

      # if: ${{ inputs.linux }}
      linux:
        description: linux
        type: boolean
        required: true
        default: false
      # if: ${{ inputs.optional-libs-linux }}
      optional-libs-linux:
        description: optional-libs-linux
        type: boolean
        required: true
        default: false

      # if: ${{ inputs.media_kit-tests-linux }}
      media_kit-tests-linux:
        description: media_kit-tests-linux
        type: boolean
        required: true
        default: false

      # if: ${{ inputs.macos }}
      macos:
        description: macos
        type: boolean
        required: true
        default: false
      # if: ${{ inputs.optional-libs-macos }}
      optional-libs-macos:
        description: optional-libs-macos
        type: boolean
        required: true
        default: false

      # if: ${{ inputs.ios }}
      ios:
        description: ios
        type: boolean
        required: true
        default: false
      # if: ${{ inputs.optional-libs-ios }}
      optional-libs-ios:
        description: optional-libs-ios
        type: boolean
        required: true
        default: false

jobs:
  # TODO: Enable package:media_kit tests on Windows

  # media_kit-tests-windows:
  #   name: package:media_kit tests (Windows)
  #   runs-on: windows-latest
  #   defaults:
  #     run:
  #       working-directory: media_kit
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: "true"
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: "stable"
  #     - run: dart pub get
  #     - run: dart test

  media_kit-tests-linux:
    name: package:media_kit tests (Linux)
    if: ${{ inputs.media_kit-tests-linux }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: media_kit
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - run: sudo apt-get update
      - run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev mpv libmpv-dev dpkg-dev p7zip-full p7zip-rar
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: dart pub get
      - run: dart test

  # TODO: Enable package:media_kit tests on macOS

  # media_kit-tests-macos:
  #   name: package:media_kit tests (macOS)
  #   runs-on: macos-latest
  #   defaults:
  #     run:
  #       working-directory: media_kit
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: "true"
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: "stable"
  #     - run: dart pub get
  #     - run: dart test

  windows:
    name: Windows
    if: ${{ inputs.windows }}
    runs-on: windows-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter build windows --verbose
      - run: cmake -E tar "cfv" "media_kit_test_win32_x64.7z" --format=7zip "build\windows\runner\Release"
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_win32_x64
          path: media_kit_test/media_kit_test_win32_x64.7z
      - uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          draft: true
          prerelease: false
          tag_name: "vnext"
          files: |
            media_kit_test/media_kit_test_win32_x64.7z

  linux:
    name: Linux
    if: ${{ inputs.linux }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - run: sudo apt-get update
      - run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev mpv libmpv-dev dpkg-dev p7zip-full p7zip-rar
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter build linux --verbose
      - run: 7z a media_kit_test_linux_x64.7z build/linux/x64/release/bundle
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_linux_x64
          path: media_kit_test/media_kit_test_linux_x64.7z
      - uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          draft: true
          prerelease: false
          tag_name: "vnext"
          files: |
            media_kit_test/media_kit_test_linux_x64.7z

  macos:
    name: macOS
    if: ${{ inputs.macos }}
    runs-on: macos-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter build macos --verbose
      - run: 7z a media_kit_test_macos_universal.7z build/macos/Build/Products/Release/media_kit_test.app
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_macos_universal
          path: media_kit_test/media_kit_test_macos_universal.7z
      - uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          draft: true
          prerelease: false
          tag_name: "vnext"
          files: |
            media_kit_test/media_kit_test_macos_universal.7z

  ios:
    name: iOS
    if: ${{ inputs.ios }}
    runs-on: macos-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter build ios --verbose --no-codesign
      - run: 7z a media_kit_test_ios_arm64.7z build/ios/iphoneos/Runner.app
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_ios_arm64
          path: media_kit_test/media_kit_test_ios_arm64.7z
      - uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          draft: true
          prerelease: false
          tag_name: "vnext"
          files: |
            media_kit_test/media_kit_test_ios_arm64.7z

  android:
    name: Android
    if: ${{ inputs.android }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter build apk --split-per-abi --verbose
      - run: |
          mv build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/app/outputs/flutter-apk/media_kit_test_android-armeabi-v7a.apk
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build/app/outputs/flutter-apk/media_kit_test_android-arm64-v8a.apk
          mv build/app/outputs/flutter-apk/app-x86_64-release.apk build/app/outputs/flutter-apk/media_kit_test_android-x86_64.apk
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_android-armeabi-v7a
          path: media_kit_test/build/app/outputs/flutter-apk/media_kit_test_android-armeabi-v7a.apk
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_android-arm64-v8a
          path: media_kit_test/build/app/outputs/flutter-apk/media_kit_test_android-arm64-v8a.apk
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_android-x86_64
          path: media_kit_test/build/app/outputs/flutter-apk/media_kit_test_android-x86_64.apk
      - uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          draft: true
          prerelease: false
          tag_name: "vnext"
          files: |
            media_kit_test/build/app/outputs/flutter-apk/media_kit_test_android-armeabi-v7a.apk
            media_kit_test/build/app/outputs/flutter-apk/media_kit_test_android-arm64-v8a.apk
            media_kit_test/build/app/outputs/flutter-apk/media_kit_test_android-x86_64.apk

  optional-libs-windows:
    name: Windows (optional libs)
    if: ${{ inputs.optional-libs-windows }}
    runs-on: windows-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Remove `media_kit_libs_*` dependencies
        run: |
          "C:\Program Files\Git\usr\bin\sed.exe" -i "/media_kit_libs_/d" pubspec.yaml
          type pubspec.yaml
        shell: cmd
      - run: flutter pub get
      - run: flutter build windows --verbose

  optional-libs-linux:
    name: Linux (optional libs)
    if: ${{ inputs.optional-libs-linux }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - run: sudo apt-get update
      - run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev mpv libmpv-dev dpkg-dev p7zip-full p7zip-rar
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Remove `media_kit_libs_*` dependencies
        run: |
          sed -i '/media_kit_libs_/d' pubspec.yaml
          cat pubspec.yaml
      - run: flutter pub get
      - run: flutter build linux --verbose

  optional-libs-macos:
    name: macOS (optional libs)
    if: ${{ inputs.optional-libs-macos }}
    runs-on: macos-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Remove `media_kit_libs_*` dependencies
        run: |
          sed -i '' '/media_kit_libs_/d' pubspec.yaml
          cat pubspec.yaml
      - run: flutter pub get
      - run: flutter build macos --verbose

  optional-libs-ios:
    name: iOS (optional libs)
    if: ${{ inputs.optional-libs-ios }}
    runs-on: macos-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Remove `media_kit_libs_*` dependencies
        run: |
          sed -i '' '/media_kit_libs_/d' pubspec.yaml
          cat pubspec.yaml
      - run: flutter pub get
      - run: flutter build ios --verbose --no-codesign

  optional-libs-android:
    name: Android (optional libs)
    if: ${{ inputs.optional-libs-android }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Remove `media_kit_libs_*` dependencies
        run: |
          sed -i '/media_kit_libs_/d' pubspec.yaml
          cat pubspec.yaml
      - run: flutter pub get
      - run: flutter build apk --split-per-abi --verbose
