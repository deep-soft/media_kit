# 2023-06-25 19:00

name: act - build

#on: [push, pull_request]

on:
  workflow_dispatch:
    inputs:
      # if: ${{ inputs.windows }}
      windows:
        description: windows
        type: boolean
        required: true
        default: true

      # if: ${{ inputs.android }}
      android:
        description: android
        type: boolean
        required: true
        default: false

      # if: ${{ inputs.linux }}
      linux:
        description: linux
        type: boolean
        required: true
        default: false

      # if: ${{ inputs.macos }}
      macos:
        description: macos
        type: boolean
        required: true
        default: false

      # if: ${{ inputs.ios }}
      ios:
        description: ios
        type: boolean
        required: true
        default: false

      # if: ${{ inputs.media_kit-tests-linux }}
      media_kit-tests-linux:
        description: media_kit-tests-linux
        type: boolean
        required: true
        default: false

env:
  TAG_NAME: media-kit-test
  VERSION: v1.0.0
  TAG_VERSION: media-kit-test-v1.0.0
  TAG_BUILD: "-b"
  TAG_REF: "0000000"
  FLUTTER_VERSION: "3.10.5"

jobs:
  # TODO: Enable package:media_kit tests on Windows

  # media_kit-tests-windows:
  #   name: package:media_kit tests (Windows)
  #   runs-on: windows-latest
  #   defaults:
  #     run:
  #       working-directory: media_kit
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: "true"
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: "stable"
  #     - run: dart pub get
  #     - run: dart test

  media_kit-tests-linux:
    name: package:media_kit tests (Linux)
    if: ${{ inputs.media_kit-tests-linux }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: media_kit
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - run: sudo apt-get update
      - run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev mpv libmpv-dev dpkg-dev p7zip-full p7zip-rar
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: dart pub get
      - run: dart test

  # TODO: Enable package:media_kit tests on macOS

  # media_kit-tests-macos:
  #   name: package:media_kit tests (macOS)
  #   runs-on: macos-latest
  #   defaults:
  #     run:
  #       working-directory: media_kit
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: "true"
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: "stable"
  #     - run: dart pub get
  #     - run: dart test

  windows:
    name: Windows
    if: ${{ inputs.windows }}
    runs-on: windows-latest
    defaults:
      run:
        working-directory: media_kit_test

    steps:
      - name: Checkout source code
        uses: deep-soft/checkout@v3
        with:
          submodules: "true"

# - get ref set build begin
      - name: Get ref, set build version
        shell: bash
        run: |
          _ref_all_=$(git log -1 --format='%H')
          # _ref_=$(echo ${_ref_all_::7})
          _date_=$(date +%Y%m%dT%H%M%S)
          _ref_org_=${{ env.TAG_REF }}
          _ref_len_="${#_ref_org_}"
          _ref_=$(echo ${_ref_all_::$_ref_len_})
          echo "TAG_REF=$_ref_" >> $GITHUB_ENV
          _build_=${{ env.TAG_BUILD }}-$_date_-$_ref_
          echo "TAG_BUILD=$_build_" >> $GITHUB_ENV
          echo "WORK_DIR=$(pwd)" >> $GITHUB_ENV
          echo "TAG_DATE=$_date_" >> $GITHUB_ENV

      - name: Print ref, build version
        shell: bash
        run: |
          echo "REF: ${{ env.TAG_REF }}
          echo "BLD: ${{ env.TAG_BUILD }}
          echo "${{ env.TAG_NAME }}-${{ env.TAG_BUILD }}" > _tag_name_.txt

      - name: Install flutter
        uses: deep-soft/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: flutter pub get
        shell: bash
        run: |
          flutter pub get

      - name: flutter build windows
        shell: bash
        run: |
          flutter build windows --verbose

###
# zip release begin
      - name: Create Archive Release
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: '${{ env.TAG_NAME }}-${{ env.VERSION }}.zip'
          directory: 'media_kit_test/build/windows/runner/Release'
          path: '.'
          exclusions: '*.git* /*node_modules/* .editorconfig'
          # archive name is ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: print env value
        shell: bash
        run: |
          echo "env.ZIP_RELEASE_ARCHIVE=${{ env.ZIP_RELEASE_ARCHIVE }}"

      - name: Publish Release
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ env.TAG_NAME }}-${{ github.job }}
          files: |
            ${{ env.ASSET_REL }}
            ${{ env.ZIP_RELEASE_ARCHIVE }}
            ${{ env.WORK_DIR }}/_tag_name_.txt

      - name: Publish Release
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ env.TAG_VERSION }}${{ env.TAG_BUILD }}
          files: |
            ${{ env.ASSET_REL }}
            ${{ env.ZIP_RELEASE_ARCHIVE }}
            ${{ env.WORK_DIR }}/_tag_name_.txt

# zip release end

  linux:
    name: Linux
    if: ${{ inputs.linux }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - run: sudo apt-get update
      - run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev mpv libmpv-dev dpkg-dev p7zip-full p7zip-rar
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter build linux --verbose
      - run: 7z a media_kit_test_linux_x64.7z build/linux/x64/release/bundle
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_linux_x64
          path: media_kit_test/media_kit_test_linux_x64.7z
      - uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          draft: true
          prerelease: false
          tag_name: "vnext"
          files: |
            media_kit_test/media_kit_test_linux_x64.7z
  macos:
    name: macOS
    if: ${{ inputs.macos }}
    runs-on: macos-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter build macos --verbose
      - run: 7z a media_kit_test_macos_universal.7z build/macos/Build/Products/Release/media_kit_test.app
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_macos_universal
          path: media_kit_test/media_kit_test_macos_universal.7z
      - uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          draft: true
          prerelease: false
          tag_name: "vnext"
          files: |
            media_kit_test/media_kit_test_macos_universal.7z
  ios:
    name: iOS
    if: ${{ inputs.ios }}
    runs-on: macos-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter build ios --verbose --no-codesign
      - run: 7z a media_kit_test_ios_arm64.7z build/ios/iphoneos/Runner.app
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_ios_arm64
          path: media_kit_test/media_kit_test_ios_arm64.7z
      - uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          draft: true
          prerelease: false
          tag_name: "vnext"
          files: |
            media_kit_test/media_kit_test_ios_arm64.7z
  android:
    name: Android
    if: ${{ inputs.android }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter build apk --split-per-abi --verbose
      - run: |
          mv build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/app/outputs/flutter-apk/media_kit_test_android-armeabi-v7a.apk
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build/app/outputs/flutter-apk/media_kit_test_android-arm64-v8a.apk
          mv build/app/outputs/flutter-apk/app-x86_64-release.apk build/app/outputs/flutter-apk/media_kit_test_android-x86_64.apk
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_android-armeabi-v7a
          path: media_kit_test/build/app/outputs/flutter-apk/media_kit_test_android-armeabi-v7a.apk
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_android-arm64-v8a
          path: media_kit_test/build/app/outputs/flutter-apk/media_kit_test_android-arm64-v8a.apk
      - uses: actions/upload-artifact@v1
        with:
          name: media_kit_test_android-x86_64
          path: media_kit_test/build/app/outputs/flutter-apk/media_kit_test_android-x86_64.apk
      - uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          draft: true
          prerelease: false
          tag_name: "vnext"
          files: |
            media_kit_test/build/app/outputs/flutter-apk/media_kit_test_android-armeabi-v7a.apk
            media_kit_test/build/app/outputs/flutter-apk/media_kit_test_android-arm64-v8a.apk
            media_kit_test/build/app/outputs/flutter-apk/media_kit_test_android-x86_64.apk
  optional-libs-windows:
    name: Windows (optional libs)
    if: ${{ inputs.windows }}
    runs-on: windows-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Remove `media_kit_libs_*` dependencies
        run: |
          "C:\Program Files\Git\usr\bin\sed.exe" -i "/media_kit_libs_/d" pubspec.yaml
          type pubspec.yaml
        shell: cmd
      - run: flutter pub get
      - run: flutter build windows --verbose

  optional-libs-linux:
    name: Linux (optional libs)
    if: ${{ inputs.linux }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - run: sudo apt-get update
      - run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev mpv libmpv-dev dpkg-dev p7zip-full p7zip-rar
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Remove `media_kit_libs_*` dependencies
        run: |
          sed -i '/media_kit_libs_/d' pubspec.yaml
          cat pubspec.yaml
      - run: flutter pub get
      - run: flutter build linux --verbose

  optional-libs-macos:
    name: macOS (optional libs)
    if: ${{ inputs.macos }}
    runs-on: macos-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Remove `media_kit_libs_*` dependencies
        run: |
          sed -i '' '/media_kit_libs_/d' pubspec.yaml
          cat pubspec.yaml
      - run: flutter pub get
      - run: flutter build macos --verbose

  optional-libs-ios:
    name: iOS (optional libs)
    if: ${{ inputs.ios }}
    runs-on: macos-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Remove `media_kit_libs_*` dependencies
        run: |
          sed -i '' '/media_kit_libs_/d' pubspec.yaml
          cat pubspec.yaml
      - run: flutter pub get
      - run: flutter build ios --verbose --no-codesign

  optional-libs-android:
    name: Android (optional libs)
    if: ${{ inputs.android }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: media_kit_test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Remove `media_kit_libs_*` dependencies
        run: |
          sed -i '/media_kit_libs_/d' pubspec.yaml
          cat pubspec.yaml
      - run: flutter pub get
      - run: flutter build apk --split-per-abi --verbose
